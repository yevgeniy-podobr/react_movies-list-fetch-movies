{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","value","setValue","setMovie","foundMovie","setFound","getMovie","a","fetch","then","response","ok","Error","status","statusText","json","data","Response","Title","Plot","imdbID","Poster","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","onChange","target","onClick","App","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,OADwB,OAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,6BCJjC,IAAMG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,MAAnC,mBAAOL,EAAP,KAAcQ,EAAd,KACA,EAA+BH,oBAAS,GAAxC,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAQ,uCAAG,4BAAAC,EAAA,sECVcvB,EDWOiB,ECV/BO,MAAM,GAAD,OAHG,qDAGH,cAAkBxB,IAC3ByB,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UDGH,OAGO,WAFhBC,EADS,QAGNC,WACPd,EAAS,MACTE,GAAS,IAGXF,EAAS,CACPnB,MAAOgC,EAAKE,MACZjC,YAAa+B,EAAKG,KAClBtB,OAAQmB,EAAKI,OACblC,OAAQ8B,EAAKK,OACblC,QAAQ,8BAAD,OAAgC6B,EAAKI,UAG9Cf,GAAS,GAhBM,iCCVZ,IAA0BrB,IDUd,OAAH,qDA6Bd,OACE,oCACE,0BACEI,UAAU,aACVkC,SAde,SAACC,GACpBA,EAAMC,iBAEF7B,IACFI,EAASJ,GACTO,EAAS,IACTC,EAAS,SAUP,yBAAKf,UAAU,SACb,2BAAOA,UAAU,QAAQqC,QAAQ,eAAjC,eAGA,yBAAKrC,UAAU,WACb,2BACEsC,KAAK,OACLC,GAAG,cACH1B,MAAOA,EACP2B,YAAY,0BACZxC,UAAU,kBACVyC,SAAU,SAACN,GACTrB,EAASqB,EAAMO,OAAO7B,OACtBI,GAAS,QAIbD,GACF,uBAAGhB,UAAU,kBAAb,yCAKF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEsC,KAAK,SACLtC,UAAU,kBACV2C,QAASzB,GAHX,iBAQF,yBAAKlB,UAAU,WACb,4BACEsC,KAAK,SACLtC,UAAU,qBAFZ,sBASN,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,GACC,kBAAC,EAAcA,M,OEvFZqC,EAAM,WACjB,MAA4BhC,mBAASgB,GAArC,mBAAOvB,EAAP,KAAewC,EAAf,KAQA,OACE,yBAAK7C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAZA,SAACmC,GACXzC,EAAO0C,MAAK,SAAAxC,GAAK,OAAIA,EAAME,SAAWqC,EAASrC,WAClDoC,EAAU,GAAD,mBAAKxC,GAAL,CAAayC,WCN5BE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fdfce5a5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies,\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMoviesFromApi } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [foundMovie, setFound] = useState(false);\n\n  const getMovie = async() => {\n    const data = await getMoviesFromApi(value);\n\n    if (data.Response === 'False') {\n      setMovie(null);\n      setFound(false);\n    }\n\n    setMovie({\n      title: data.Title,\n      description: data.Plot,\n      imdbId: data.imdbID,\n      imgUrl: data.Poster,\n      imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n    });\n\n    setFound(true);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (movie) {\n      addMovie(movie);\n      setValue('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={value}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              onChange={(event) => {\n                setValue(event.target.value);\n                setFound(true);\n              }}\n            />\n          </div>\n          {!foundMovie && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=160d8ba';\n\nexport function getMoviesFromApi(title) {\n  return fetch(`${BASE_URL}&t=${title}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    if (!movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}